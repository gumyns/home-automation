set(ENV{{PATH}} {gcc_dir})
set(GCC_ARM_DIRECTORY {gcc_dir})

add_definitions(-D{device})
add_definitions(-DUSE_HAL_DRIVER)

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)
set(CMAKE_C_COMPILER_WORKS 1)
set(CMAKE_CXX_COMPILER_WORKS 1)

set(CMAKE_C_COMPILER arm-none-eabi-gcc)
set(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER arm-none-eabi-gcc)
set(CMAKE_AR arm-none-eabi-ar)
set(CMAKE_RANLIB arm-none-eabi-ranlib)
set(CMAKE_LINKER arm-none-eabi-ld)

set(COMMON_FLAGS " -Wall -Wextra -mcpu=cortex-m0 -mthumb -mthumb-interwork -mfloat-abi=soft -ffunction-sections -fdata-sections -g -fno-common -fmessage-length=0  --specs=nano.specs -Os -fsigned-char -ffreestanding -fomit-frame-pointer -mabi=aapcs -fno-unroll-loops -ffast-math -ftree-vectorize -fno-builtin -MMD -MP")
set(CMAKE_CXX_FLAGS_INIT "${{COMMON_FLAGS}} -std=gnu++14")
set(CMAKE_C_FLAGS_INIT "${{COMMON_FLAGS}} -std=gnu99")
set(CMAKE_ASM_FLAGS_INIT -nostdinc)
set(CMAKE_EXE_LINKER_FLAGS_INIT "-mcpu=cortex-m0 -mthumb -lc -lm -lnosys -Xlinker --gc-sections -Wl,-Map,${{PROJECT_NAME}}.map,-o${{PROJECT_NAME}}.elf")

set(CMAKE_C_FLAGS "${{COMMON_FLAGS}} -std=gnu99" CACHE INTERNAL "c compiler flags")
set(CMAKE_CXX_FLAGS "${{COMMON_FLAGS}} -std=gnu++14  -fabi-version=0 -fno-exceptions -fno-rtti -fno-use-cxa-atexit -fno-threadsafe-statics" CACHE INTERNAL "cxx compiler flags")
set(CMAKE_ASM_FLAGS " -x assembler-with-cpp ${{COMMON_FLAGS}}" CACHE INTERNAL "asm compiler flags")
